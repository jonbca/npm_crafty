--- crafty-0.5.3_original.js	Sat Mar 30 11:57:11 2013
+++ crafty-0.5.3.js	Sat Mar 30 14:24:55 2013
@@ -6,6 +6,7 @@
 * Dual licensed under the MIT or GPL licenses.
 */
 
+exports.createCrafty = function(window, navigator) {
 (function (window, initComponents, undefined) {
     /**@
     * #Crafty
@@ -762,12 +763,13 @@
         * @see Crafty.stop,  Crafty.viewport
         */
         init: function (w, h) {
-            Crafty.viewport.init(w, h);
+            //Crafty.viewport.init(w, h);
 
             //call all arbitrary functions attached to onload
             this.trigger("Load");
             this.timer.init();
-
+			console.log("Crafty started.");
+			
             return this;
         },
 
@@ -931,7 +933,7 @@
                     loops++;
                 }
                 if (loops) {
-                    Crafty.DrawManager.draw();
+                    //Crafty.DrawManager.draw();
                 }
                if(this.currentTime > this.frameTime){
                     Crafty.trigger("MessureFPS",{value:this.frame});
@@ -1347,6 +1349,7 @@
     if (typeof define === 'function') {
         define('crafty', [], function() { return Crafty; });
     }
+	console.log("Crafty loaded.");
 })(window,
 
 //wrap around components
@@ -6208,6 +6211,7 @@
 });
 
 //initialize the input events onload
+/*
 Crafty.bind("Load", function () {
 	Crafty.addEvent(this, "keydown", Crafty.keyboardDispatch);
 	Crafty.addEvent(this, "keyup", Crafty.keyboardDispatch);
@@ -6225,6 +6229,7 @@
     Crafty.addEvent(this, Crafty.stage.elem, "touchcancel", Crafty.touchDispatch);
     Crafty.addEvent(this, Crafty.stage.elem, "touchleave", Crafty.touchDispatch);
    });
+*/
 
 Crafty.bind("CraftyStop", function () {
 	Crafty.removeEvent(this, "keydown", Crafty.keyboardDispatch);
@@ -10659,4 +10664,5 @@
 	}
 });
 
-});
\ No newline at end of file
+});
+};
\ No newline at end of file
